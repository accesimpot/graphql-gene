name: Release

on:
  push:
    branches:
      - main
      - beta

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    env:
      CI_FORCE_RELEASE_RUN: ${{ secrets.CI_FORCE_RELEASE_RUN }}

    steps:
      - name: Checkout branch 🛎
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      # https://nx.dev/packages/nx/documents/affected
      - name: Set SHAs for `nx affected` commands
        id: setSHAs
        uses: nrwl/nx-set-shas@v4

      - name: Install pnpm 👨🏻‍💻
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup node env 🏗
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'

      - name: Install dependencies 👨🏻‍💻
        run: pnpm install --prod=false

      - name: Any change affecting the public packages❔
        id: public-package-affected
        # Make sure the job fails with exit code 1 if the nx command fails
        run: |
          projects=$(pnpm --silent nx show projects --affected --exclude=dev-* || echo 'error')
          projects+=$(git diff --name-only --diff-filter=d ${{ steps.setSHAs.outputs.base }} -- README.md || echo 'error')
          projects+=$(git diff --name-only --diff-filter=d ${{ steps.setSHAs.outputs.base }} -- package.json || echo 'error')

          projects_array=($projects)
          [[ ${projects_array[*]} =~ 'error' ]] && exit 1

          echo "count=${#projects_array[@]}" >> $GITHUB_OUTPUT

      - name: Build packages 📦
        if: steps.public-package-affected.outputs.count > 0 || ${{ env.CI_FORCE_RELEASE_RUN }} == 'true'
        run: pnpm build

      # A release is made if the prefix is feat, fix, perf, chore(deps), or docs(README)
      #
      # { type: 'feat', release: 'minor' },
      # { type: 'fix', release: 'patch' },
      # { type: 'perf', release: 'patch' },
      # { type: 'chore', scope: 'deps', release: 'patch' },
      # { type: 'docs', scope: 'README', release: 'patch' },
      #
      # See https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular#type
      #
      # Available types:
      #   - feat: A new feature
      #   - fix: A bug fix
      #   - docs: Documentation only changes
      #   - style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
      #   - refactor: A code change that neither fixes a bug nor adds a feature
      #   - perf: A code change that improves performance
      #   - test: Adding missing tests or correcting existing tests
      #   - build: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)
      #   - ci: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)
      #   - chore: Other changes that don't modify src or test files
      #   - revert: Reverts a previous commit
      #
      - name: Release
        if: steps.public-package-affected.outputs.count > 0 || ${{ env.CI_FORCE_RELEASE_RUN }} == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm -r --workspace-concurrency=1 semantic-release -e semantic-release-monorepo
